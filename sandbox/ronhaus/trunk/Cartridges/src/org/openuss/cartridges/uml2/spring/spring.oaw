<?xml version="1.0" encoding="windows-1252"?>

<workflow>

	<!--Metamodel definitions needed for the components-->
	<bean id="mm_uml2" class="org.openarchitectureware.uml2.UML2MetaModel"/>
	<bean id="mm_ecore" class="org.openarchitectureware.type.emf.EmfMetaModel">
		<metaModelPackage value="org.eclipse.emf.ecore.EcorePackage"/>
	</bean>
	<bean id="mm_business_profile" class="org.openarchitectureware.uml2.profile.ProfileMetaModel">
		<profile value="${profilefile}"/>
	</bean>
	
	<!--The Check component. The checks provided by the Spring cartridge are invoked here-->


	<!--The Generator component.-->
	<component id="generatorSpring" class="org.openarchitectureware.xpand2.Generator" skipOnErrors="true">
		<metaModel idRef="mm_uml2"/>	
		<metaModel idRef="mm_ecore"/>
		<metaModel idRef="mm_business_profile"/>
		
		<fileEncoding value="ISO-8859-1"/>
		
		<globalVarDef name="connectiondriver_class" value="${dataSource.connection.driver_class}"/>
		<globalVarDef name="connection_url" value="${dataSource.connection.url}"/>
		<globalVarDef name="connection_user" value="${dataSource.connection.user}"/>
		<globalVarDef name="connection_password" value="${dataSource.connection.password}"/>
		
		<globalVarDef name="javaInterfacePrefix" value="${spring.java.interface.prefix}"/>
		<globalVarDef name="javaInterfaceSuffix" value="${spring.java.interface.suffix}"/>
		<globalVarDef name="javaAbstractPrefix" value="${spring.java.abstract.prefix}"/>
		<globalVarDef name="javaAbstractSuffix" value="${spring.java.abstract.suffix}"/>
		<globalVarDef name="javaImplementationPrefix" value="${spring.java.implementation.prefix}"/>
		<globalVarDef name="javaImplementationSuffix" value="${spring.java.implementation.suffix}"/>		
		<globalVarDef name="spring_Persistence" value="${spring.Persistence}"/>
		<globalVarDef name="spring_OR_Mapper" value="${spring.OR_Mapper}"/>
		
		<expand value="${expandExpression}"/>
		
		<outlet path="${outlet.src.dir}"/>
	   	<outlet name="outletSrcOnceDir" path="${outlet.src.once.dir}" overwrite="false"/>

   		<beautifier class="org.openarchitectureware.xpand2.output.JavaBeautifier"/>
   		<beautifier class="org.openarchitectureware.xpand2.output.XmlBeautifier" fileExtensions=".xml"/>
	</component>

	<component adviceTarget="generatorSpring" id="reflectionAdvice" class="org.openarchitectureware.xpand2.GeneratorAdvice">
		<advices value="org::openuss::cartridges::uml2::spring::templates::Service"/>
	</component>

</workflow>