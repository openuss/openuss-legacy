#set ($generatedFile = "${entity.packagePath}/${entity.entityName}PK.java")
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

#set ($primaryKeyType="${entity.entityName}PK")
/**
 * Primary key class for ${entity.entityName}
 */
public class $primaryKeyType implements java.io.Serializable {

    private static final long serialVersionUID = ${entity.serialVersionUID}L;

#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
    private $associationEnd.otherEnd.getterSetterTypeName $associationEnd.otherEnd.name;

    public $associationEnd.otherEnd.getterSetterTypeName ${associationEnd.otherEnd.getterName}()
    {
        return this.${associationEnd.otherEnd.name};
    }

    public void ${associationEnd.otherEnd.setterName}(${associationEnd.otherEnd.getterSetterTypeName} $associationEnd.otherEnd.name)
    {
        this.${associationEnd.otherEnd.name} = $associationEnd.otherEnd.name;
    }

#end
#end
## Do not generate identifier properties if using identifier ids.
#if ($entity.identifierAssociationEnds.empty)
#foreach ( $identifier in $entity.identifiers )
#set ($typeName = $identifier.type.fullyQualifiedName)
    private $typeName $identifier.name;

    /**
$identifier.getDocumentation("     * ")
     */
    public $typeName ${identifier.getterName}()
    {
        return this.${identifier.name};
    }

    public void ${identifier.setterName}(${typeName} $identifier.name)
    {
        this.${identifier.name} = $identifier.name;
    }

#end
#end
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof $primaryKeyType))
        {
            return false;
        }
        final $primaryKeyType that = ($primaryKeyType)object;
        return new org.apache.commons.lang.builder.EqualsBuilder()
#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
            .append(this.${associationEnd.otherEnd.getterName}(),that.${associationEnd.otherEnd.getterName}())
#end
#end
#if ($entity.identifierAssociationEnds.empty)
#foreach ( $identifier in $entity.identifiers )
            .append(this.${identifier.getterName}(), that.${identifier.getterName}())
#end
#end
            .isEquals();
    }

    public int hashCode()
    {
        return new org.apache.commons.lang.builder.HashCodeBuilder()
#foreach($associationEnd in $entity.identifierAssociationEnds)
#if($associationEnd.many2One)
            .append(${associationEnd.otherEnd.getterName}())
#end
#end
#if ($entity.identifierAssociationEnds.empty)
#foreach ( $identifier in $entity.identifiers )
            .append(${identifier.getterName}())    
#end
#end
            .toHashCode();
    }
}