<?xml version="1.0" encoding="ISO-8859-1" ?>

<mappings name="CoreMerge">

    <mapping>
        <from><![CDATA[license-header java merge-point]]></from>
        <to><![CDATA[OpenUSS - Open Source University Support System]]></to>
    </mapping>
    
    <mapping>
    	<from>
			<![CDATA[#if (!$class.properties.empty)]]>
		</from>
	   	<to>
<![CDATA[
    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = ${class.serialVersionUID}L;

#if (!$class.properties.empty)
]]>    	
    	</to>
    </mapping>    
<!-- 
    <mapping>          
        <from><![CDATA[this.getHibernateTemplate().update($argumentName);]]></from>
        <to>
		<![CDATA[
        try {
	        this.getHibernateTemplate().update($argumentName);
		} catch (org.springframework.dao.DataAccessException ex) {
			if (ex.getCause() instanceof org.hibernate.NonUniqueObjectException) {
				logger.debug("Catched NonUniqueObjectException "+ex.getCause().getMessage());
				getSession().merge($argumentName);
			} else {
				throw ex;
			}
		}
		]]></to>
    </mapping>
 -->    
    
    <!-- GenerateTest Merge -->
    <mapping>
    	<from><![CDATA[<!-- namespace-propertyGroup merge-point -->]]></from>
    	<to>
<![CDATA[
		<propertyGroup name="CustomOutlets">
			<documentation>
				Custom outlets
			</documentation>
			<property name="tests">
				<documentation>Folder for test classes</documentation>
			</property>
			<property name="test-impls">
				<documentation>Folder for test-impl classes</documentation>
			</property>
		</propertyGroup>
]]>    	
    	</to>
    </mapping>

    <mapping>
    	<from><![CDATA[<!-- cartridge-template merge-point -->]]></from>
    	<to>
<![CDATA[
    <template
        path="templates/spring/hibernate/SpringHibernateDaoTest.vsl"
        outputPattern="$generatedFile"
        outlet="test-impls"
        overwrite="false">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/spring/hibernate/SpringHibernateDaoTestBase.vsl"
        outputPattern="$generatedFile"
        outlet="tests"
        overwrite="true">
        <modelElements variable="entity">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
        </modelElements>
    </template>
    <template
        path="templates/spring/SpringServiceTest.vsl"
        outputPattern="$generatedFile"
        outlet="test-impls"
        overwrite="false">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>
    
    <template
        path="templates/spring/SpringServiceTestBase.vsl"
        outputPattern="$generatedFile"
        outlet="tests"
        overwrite="true">
        <modelElements variable="service">
            <modelElement>
                <type name="org.andromda.cartridges.spring.metafacades.SpringService"/>
            </modelElement>
        </modelElements>
    </template>
]]>    	
    	</to>
    </mapping>
    
    <mapping>
        <from><![CDATA[<!-- applicationContext hibernateProperties merge-point -->]]></from>
        <to><![CDATA[
                <prop key="hibernate.format_sql">true</prop>
        		<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop>
       			<prop key="hibernate.current_session_context_class">thread</prop>
        ]]></to>
    </mapping>
    
    <mapping>
    	<from>
<![CDATA[<template
        path="templates/spring/applicationContext.xml.vsl"
        outputPattern="$applicationContext"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>]]></from>
    	<to><![CDATA[<template
        path="templates/spring/context.xml.vsl"
        outputPattern="$applicationContext"
        outlet="spring-configuration"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="entities">
                <type name="org.andromda.cartridges.spring.metafacades.SpringEntity"/>
            </modelElement>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="abstract">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>]]></to>
    </mapping>
    
    <mapping>
     <from><![CDATA[<template
        path="templates/spring/SpringServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="services"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">false</property>
                    <property name="abstract">false</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>]]>
     </from>
     <to><![CDATA[<!-- skip service locator -->]]></to>
    </mapping>

    <mapping>
     <from><![CDATA[<template
        path="templates/spring/SpringServiceLocator.vsl"
        outputPattern="$generatedFile"
        outlet="server"
        overwrite="true"
        outputToSingleFile="true"
        outputOnEmptyElements="false">
        <modelElements>
            <modelElement variable="services">
                <type name="org.andromda.cartridges.spring.metafacades.SpringService">
                    <property name="richClient">true</property>
                </type>
            </modelElement>
            <modelElement variable="manageables">
                <type name="org.andromda.cartridges.spring.metafacades.SpringManageableEntity"/>
            </modelElement>
        </modelElements>
    </template>]]>     </from>
     <to><![CDATA[<!-- skip service locator -->]]></to>
    </mapping>
    
</mappings>