/* Generated by Freestyle Learning Group */

package freestyleLearning.learningUnitViewAPI.events.learningUnitViewEvent;


public class FSLLearningUnitViewEvent {
    public static final int ELEMENTS_SELECTED = 0;
    public static final int ELEMENTS_MOVED = 1;
    public static final int ELEMENTS_MODIFIED = 2;
    public static final int ELEMENTS_REMOVED = 3;
    public static final int ELEMENTS_CREATED = 4;
    public static final int ELEMENTS_USER_VERSION_CREATED = 5;
    public static final int ELEMENT_ACTIVATED = 6;
    public static final int ELEMENT_LINKS_REMOVED = 7;
    public static final int VIEW_ACTIVATED = 8;
    public static final int VIEW_DEACTIVATED = 9;
    public static final int FULL_SCREEN_SELECTED = 10;
    public static final int SCALE_MODE_CHANGED = 11;
    public static final int HYPERLINK_ENTERED = 12;
    public static final int HYPERLINK_EXITED = 13;
    public static final int HYPERLINK_ACTIVATED = 14;
    public static final int LEARNING_UNIT_F2_ACTION = 15;
    public static final int STRUCTURE_TREE_DIALOG_FOLDER_SELECTED = 16;
    public static final int VIEW_IMPORT = 17;
    // view specific subclasses should use this type
    public static final int VIEW_SPECIFIC_EVENT_OCCURRED = 99;
    protected int eventType;
    protected String learningUnitViewManagerId;
    protected String[] learningUnitViewElementIds;
    protected String activeLearningUnitViewElementId;
    protected String secondaryActiveLearningUnitViewElementId;
    protected String learningUnitViewElementId;
    protected String[] learningUnitViewElementLinksIds;
    protected String targetLabel;
    protected boolean elementsSwitchedOnly;
    protected boolean fullScreenModeRequested;
    protected boolean fullScreenModeChanged;
    protected boolean scaleToFit;
    protected boolean followingHyperlink;
    
    public String getLearningUnitViewManagerId() {
        return learningUnitViewManagerId;
    }

    public String[] getLearningUnitViewElementIds() {
        return learningUnitViewElementIds;
    }

    public String getActiveLearningUnitViewElementId() {
        return activeLearningUnitViewElementId;
    }

    public String getSecondaryActiveLearningUnitViewElementId() {
        return secondaryActiveLearningUnitViewElementId;
    }

    public String getLearningUnitViewElementId() {
        return learningUnitViewElementId;
    }

    public String[] getLearningUnitViewElementLinksIds() {
        return learningUnitViewElementLinksIds;
    }

    public String getTargetLabel() {
        return targetLabel;
    }

    public boolean isElementsSwitchedOnly() {
        return elementsSwitchedOnly;
    }

    public boolean isFullScreenModeRequested() {
        return fullScreenModeRequested;
    }

    public boolean isFullScreenModeChanged() {
        return fullScreenModeChanged;
    }

    public int getEventType() {
        return eventType;
    }

    public boolean isScaleToFit() {
        return scaleToFit;
    }

    public boolean isFollowingHyperlink() {
        return followingHyperlink;
    }
    
    // Carsten Fiedler
    public static FSLLearningUnitViewEvent createViewImportEvent(String learningUnitViewManagerId) {
        FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
        event.eventType = VIEW_IMPORT;
        event.learningUnitViewManagerId = learningUnitViewManagerId;
        return event;
    }
    
    public static FSLLearningUnitViewEvent createLearningUnitF2ActionEvent(String elementId) {
        FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
        event.eventType = LEARNING_UNIT_F2_ACTION;
        event.learningUnitViewElementId = elementId;
        return event;
    }

    public static FSLLearningUnitViewEvent createScaleModeChangedEvent(String learningUnitViewManagerId, boolean scaleToFit) {
        FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
        event.eventType = FSLLearningUnitViewEvent.SCALE_MODE_CHANGED;
        event.learningUnitViewElementId = learningUnitViewManagerId;
        event.scaleToFit = scaleToFit;
        return event;
    }

    public static FSLLearningUnitViewEvent createHyperlinkViewEvent(String targetLabel, int type) {
        FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
        event.eventType = type;
        event.targetLabel = targetLabel;
        return event;
    }

    public static FSLLearningUnitViewEvent createElementsSelectedEvent(String learningUnitViewManagerId,
        String[] learningUnitViewElementIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENTS_SELECTED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementIds = learningUnitViewElementIds;
            event.learningUnitViewElementId = learningUnitViewElementIds[0];
            return event;
    }

    public static FSLLearningUnitViewEvent createElementsCreatedEvent(String learningUnitViewManagerId,
        String[] learningUnitViewElementIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENTS_CREATED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementIds = learningUnitViewElementIds;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementsModifiedEvent(String learningUnitViewManagerId,
        String[] learningUnitViewElementIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENTS_MODIFIED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementIds = learningUnitViewElementIds;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementActivatedEvent(String learningUnitViewManagerId,
        String activeLearningUnitViewElementId, String secondaryActiveLearningUnitViewElementId,
        boolean elementsSwitchedOnly) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENT_ACTIVATED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.activeLearningUnitViewElementId = activeLearningUnitViewElementId;
            event.secondaryActiveLearningUnitViewElementId = secondaryActiveLearningUnitViewElementId;
            event.elementsSwitchedOnly = elementsSwitchedOnly;
            event.fullScreenModeChanged = false;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementActivatedEvent(String learningUnitViewManagerId,
        String activeLearningUnitViewElementId, String secondaryActiveLearningUnitViewElementId, boolean elementsSwitchedOnly,
        boolean fullScreenModeChanged) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENT_ACTIVATED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.activeLearningUnitViewElementId = activeLearningUnitViewElementId;
            event.secondaryActiveLearningUnitViewElementId = secondaryActiveLearningUnitViewElementId;
            event.elementsSwitchedOnly = elementsSwitchedOnly;
            event.fullScreenModeChanged = fullScreenModeChanged;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementsUserVersionCreatedEvent(String learningUnitViewManagerId,
        String[] learningUnitViewElementIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENTS_USER_VERSION_CREATED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementIds = learningUnitViewElementIds;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementsMovedEvent(String learningUnitViewManagerId,
        String[] learningUnitViewElementIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENTS_MOVED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementIds = learningUnitViewElementIds;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementsRemovedEvent(String learningUnitViewManagerId,
        String[] learningUnitViewElementIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENTS_REMOVED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementIds = learningUnitViewElementIds;
            return event;
    }

    public static FSLLearningUnitViewEvent createElementLinksRemovedEvent(String learningUnitViewManagerId,
        String learningUnitViewElementId, String[] learningUnitViewElementLinksIds) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = ELEMENT_LINKS_REMOVED;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            event.learningUnitViewElementId = learningUnitViewElementId;
            event.learningUnitViewElementLinksIds = learningUnitViewElementLinksIds;
            return event;
    }

    public static FSLLearningUnitViewEvent createViewActivatedEvent(String learningUnitViewManagerId,
        boolean followingHyperlink) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = VIEW_ACTIVATED;
            event.followingHyperlink = followingHyperlink;
            event.learningUnitViewManagerId = learningUnitViewManagerId;
            return event;
    }

    public static FSLLearningUnitViewEvent createViewDeactivatedEvent(String learningUnitViewManagerId) {
        FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
        event.eventType = VIEW_DEACTIVATED;
        event.learningUnitViewManagerId = learningUnitViewManagerId;
        return event;
    }

    public static FSLLearningUnitViewEvent createFullScreenModeChangedEvent(String learningUnitViewManagerId,
        String learningUnitViewElementId, boolean fullScreenModeRequested) {
            FSLLearningUnitViewEvent event = new FSLLearningUnitViewEvent();
            event.eventType = FULL_SCREEN_SELECTED;
            event.learningUnitViewManagerId = learningUnitViewElementId;
            event.activeLearningUnitViewElementId = learningUnitViewElementId;
            event.fullScreenModeRequested = fullScreenModeRequested;
            return event;
    }
}
