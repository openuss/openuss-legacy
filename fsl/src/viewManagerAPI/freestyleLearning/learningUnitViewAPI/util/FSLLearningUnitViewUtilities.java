/* Generated by Freestyle Learning Group */

package freestyleLearning.learningUnitViewAPI.util;

import java.awt.Font;
import java.io.File;

import javax.swing.SwingUtilities;
import javax.swing.UIManager;

import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewElement;
import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewElementsManager;
import freestyleLearning.learningUnitViewAPI.events.learningUnitViewEvent.FSLLearningUnitViewEvent;
import freestyleLearningGroup.independent.gui.FLGHtmlPane;
import freestyleLearningGroup.independent.gui.FLGHtmlUtilities;
import freestyleLearningGroup.independent.util.FLGFileUtility;

public class FSLLearningUnitViewUtilities {
    public static String updateExternalHtmlFilesOnLinksRemovedEvent(FSLLearningUnitViewEvent event,
        FSLLearningUnitViewElementsManager learningUnitViewElementsManager, FSLLearningUnitViewElement learningUnitViewElement,
        String relativeHtmlFileName, String fileNamePrefix, String fileNameSuffix) {
            String newRelativeHtmlFileName = relativeHtmlFileName;
            File htmlFile = learningUnitViewElementsManager.resolveRelativeFileName(relativeHtmlFileName,
                learningUnitViewElement);
            String htmlText = FLGFileUtility.readFileInString(htmlFile);
            for (int i = 0; i < event.getLearningUnitViewElementLinksIds().length; i++) {
                htmlText = FLGHtmlUtilities.removeTag("a",
                    "href=\"" + event.getLearningUnitViewElementLinksIds() [i] + "\"", htmlText);
            }
            newRelativeHtmlFileName = learningUnitViewElementsManager.getRelativeFileNameVersionForWriting(relativeHtmlFileName,
                learningUnitViewElement, fileNamePrefix, fileNameSuffix);
            htmlFile = learningUnitViewElementsManager.resolveRelativeFileName(newRelativeHtmlFileName,
                learningUnitViewElement);
            FLGFileUtility.writeStringIntoFile(htmlText, htmlFile);
            learningUnitViewElement.setModified(true);
            return newRelativeHtmlFileName;
    }

    public static void updateHtmlPaneUI(FLGHtmlPane htmlPane) {
        int baseFontSize = ((Integer)UIManager.get("FSLLearningUnitViewElementsContentsPanel.BaseFontSize")).intValue();
        String[] styleSheetRules = {"BODY {font-size : " + baseFontSize + "pt;}",
            						"EM {font-style: plain; background: yellow}",
									"H1 {font-size : " + (baseFontSize*1.44) + "pt;}",
									"H2 {font-size : " + (baseFontSize*1.2) + "pt;}",
									"H3 {font-size : " + (baseFontSize) + "pt;}"};
        htmlPane.addStyleSheetRules(styleSheetRules);
        UIManager.put("FLGHtmlPaneInputTagTextComponent.Font", new Font("SansSerif", Font.PLAIN, baseFontSize));
        SwingUtilities.updateComponentTreeUI(htmlPane);
    }
}
