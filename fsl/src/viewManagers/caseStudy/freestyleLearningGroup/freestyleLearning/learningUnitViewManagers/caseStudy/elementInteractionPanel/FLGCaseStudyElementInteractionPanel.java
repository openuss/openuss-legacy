/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.elementInteractionPanel;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewManager;
import freestyleLearning.learningUnitViewAPI.elementInteractionPanel.FSLAbstractLearningUnitViewElementInteractionPanel;
import freestyleLearning.learningUnitViewAPI.elementInteractionPanel.FSLLearningUnitViewElementInteractionButton;
import freestyleLearning.learningUnitViewAPI.events.learningUnitEvent.FSLLearningUnitEventGenerator;
import freestyleLearning.learningUnitViewAPI.events.learningUnitViewEvent.FSLLearningUnitViewAdapter;
import freestyleLearning.learningUnitViewAPI.events.learningUnitViewEvent.FSLLearningUnitViewEvent;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.data.xmlBindingSubclasses.FLGCaseStudyElement;
import freestyleLearningGroup.independent.gui.FLGImageUtility;
import freestyleLearningGroup.independent.util.FLGInternationalization;
import freestyleLearningGroup.independent.util.FLGPlatformSpecifics;

public class FLGCaseStudyElementInteractionPanel extends FSLAbstractLearningUnitViewElementInteractionPanel {
    private FLGInternationalization internationalization;
    private FSLLearningUnitViewElementInteractionButton playButton;

    public FLGCaseStudyElementInteractionPanel() {
        setSplitModeAllowed(true);
        internationalization = new FLGInternationalization("freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.elementInteractionPanel.internationalization",
            getClass().getClassLoader());
        playButton = new FSLLearningUnitViewElementInteractionButton(loadImage("buttonPlay.gif"));
        playButton.setToolTipText(internationalization.getString("button.tooltip.play"));
        playButton.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    play();
                }
            });
    }

    public void init(FSLLearningUnitViewManager learningUnitViewManager,
        FSLLearningUnitEventGenerator learningUnitEventGenerator, boolean editMode) {
            super.init(learningUnitViewManager, learningUnitEventGenerator, editMode);
            learningUnitViewManager.addLearningUnitViewListener(new FLGInteractionPanel_Adapter());
            setSplitModeAllowed(true);
            setFullScreenModeAllowed(true);
    }

    private void play() {
        // Show PDF
        FLGCaseStudyElement caseStudyElement = (FLGCaseStudyElement)learningUnitViewElementsManager.getLearningUnitViewElement(activeLearningUnitViewElementId, false);
        String executableFileName = caseStudyElement.getDocumentFileName();
        File executableFile = learningUnitViewElementsManager.resolveRelativeFileName(caseStudyElement.getDocumentFileName(), caseStudyElement);
        String executableFilePath = executableFile.getAbsolutePath();
        FLGPlatformSpecifics.startExternalApplication(executableFilePath);
    }

    private void showPlayButton(boolean showButton) {
        if (showButton) {
            add(playButton);
        }
        else {
            remove(playButton);
        }
        this.updateUI();
    }

    private Image loadImage(String imageFileName) {
        return FLGImageUtility.loadImageAndWait(getClass().getResource("images/" + imageFileName));
    }

    protected void buildIndependentUI() {
        super.buildIndependentUI();
        super.buildDefaultNavigationButtons(internationalization.getString("button.previousPage.toolTipText"),
            internationalization.getString("button.nextPage.toolTipText"));
    }

    class FLGInteractionPanel_Adapter extends FSLLearningUnitViewAdapter {
        public void learningUnitViewElementActivated(FSLLearningUnitViewEvent event) {
            if (event.getLearningUnitViewManagerId().equals(learningUnitViewManager.getLearningUnitViewManagerId())) {
                FLGCaseStudyElement caseStudyElement =
                    (FLGCaseStudyElement)learningUnitViewElementsManager.getLearningUnitViewElement(event.getActiveLearningUnitViewElementId(), false);
                if (caseStudyElement != null && caseStudyElement.getType().equals(FLGCaseStudyElement.ELEMENT_TYPE_PDF)) {
                    showPlayButton(true);
                }
                else
                    showPlayButton(false);
            }
        }
    }
}
