/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy;

import java.awt.Image;
import java.io.File;
import java.net.URL;

import javax.xml.bind.Dispatcher;

import freestyleLearning.learningUnitViewAPI.*;
import freestyleLearning.learningUnitViewAPI.events.learningUnitEvent.*;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.data.xmlBinding.*;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.data.xmlBindingSubclasses.*;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.elementInteractionPanel.*;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.elementsContentsPanel.*;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.elementsStructurePanel.*;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.statusPanel.*;
import freestyleLearningGroup.independent.gui.*;
import freestyleLearningGroup.independent.util.*;

public class FLGCaseStudyManager extends FSLAbstractLearningUnitViewManager {
    private FSLLearningUnitViewPrimaryActivationButton primaryActivationButton;
    private FLGInternationalization internationalization;

    public void init(FSLLearningUnitsActivator learningUnitsActivator,
        FSLLearningUnitViewsActivator learningUnitViewsActivator, FSLLearningUnitEventGenerator learningUnitEventGenerator,
        String learningUnitViewManagerId, String learningUnitViewManagerTitle, File learningUnitViewManagerCodeDirectory,
        boolean editMode, boolean originalElementsOnly, FLGLongLastingOperationStatus progressStatus) {
            super.init(learningUnitsActivator, learningUnitViewsActivator, learningUnitEventGenerator,
                learningUnitViewManagerId, learningUnitViewManagerTitle, learningUnitViewManagerCodeDirectory, editMode,
                originalElementsOnly, progressStatus);
            internationalization = new FLGInternationalization("freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.caseStudy.internationalization",
                getClass().getClassLoader());
            int stepSize = progressStatus.getStepSize();
            progressStatus.setStatusValue(progressStatus.getStatusValue() + (int)(stepSize / 5.));
            primaryActivationButton = new FSLLearningUnitViewPrimaryActivationButton(loadImage("primaryActivationButton.gif"));
            primaryActivationButton.setToolTipText(internationalization.getString("button.primaryActivation.toolTipText"));
            elementsStructurePanel = new FLGCaseStudyElementsStructurePanel();
            elementsStructurePanel.init(this, learningUnitEventGenerator, editMode);
            elementsStructurePanel.setAutomaticActivation(true);
            progressStatus.setStatusValue(progressStatus.getStatusValue() + (int)(stepSize / 5.));
            elementInteractionPanel = new FLGCaseStudyElementInteractionPanel();
            elementInteractionPanel.init(this, learningUnitEventGenerator, editMode);
            progressStatus.setStatusValue(progressStatus.getStatusValue() + (int)(stepSize / 5.));
            elementsContentsPanel = new FLGCaseStudyElementsContentsPanel();
            elementsContentsPanel.init(this, learningUnitEventGenerator, editMode);
            progressStatus.setStatusValue(progressStatus.getStatusValue() + (int)(stepSize / 5.));
            statusPanel = new FLGCaseStudyStatusPanel();
            statusPanel.init(this, learningUnitEventGenerator, editMode);
            progressStatus.setStatusValue(progressStatus.getStatusValue() + (int)(stepSize / 5.));
    }

    public URL getMainHelpPageUrl() {
        return getClass().getClassLoader().getResource("freestyleLearningGroup/freestyleLearning/learningUnitViewManagers/caseStudy/help");
    }

    public FSLLearningUnitViewElement findLearningUnitViewElement(String contentFileName) {
        String elementId = null;
        FSLLearningUnitViewElement element = null;
        if (learningUnitViewElementsManager != null) {
            String[] elementIds = learningUnitViewElementsManager.getAllLearningUnitViewElementIds();
            for (int i = 0; i < elementIds.length; i++) {
                FLGCaseStudyElement caseStudyElement =
                    (FLGCaseStudyElement)learningUnitViewElementsManager.getLearningUnitViewElement(elementIds[i], false);
                if (caseStudyElement != null) {
                    if (caseStudyElement.getHtmlFileName() != null &&
                        caseStudyElement.getHtmlFileName().equals(contentFileName)) {
                            elementId = elementIds[i];
                            element = caseStudyElement;
                            break;
                    }
                }
            }
        }
        return element;
    }    
        
    public FSLLearningUnitViewPrimaryActivationButton getPrimaryActivationButton() {
        return primaryActivationButton;
    }

    protected Dispatcher createDispatcher() {
        Dispatcher d = FLGCaseStudyDescriptor.newDispatcher();
        d.register(CaseStudyDescriptor.class, FLGCaseStudyDescriptor.class);
        d.register(ViewElement.class, FLGCaseStudyElement.class);
        d.register(ViewElementLink.class, FLGCaseStudyElementLink.class);
        d.register(ViewElementLinkTarget.class, FLGCaseStudyElementLinkTarget.class);
        return d;
    }

    protected FSLLearningUnitViewXMLDocument createLearningUnitViewXMLDocument() {
        return new FLGCaseStudyDescriptor();
    }

    private Image loadImage(String imageFileName) {
        return FLGImageUtility.loadImageAndWait(getClass().getClassLoader().getResource("freestyleLearningGroup/freestyleLearning/learningUnitViewManagers/caseStudy/images/" +
            imageFileName));
    }
}
