/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.textStudy.elementsContentsPanel;

import java.io.File;

import javax.swing.JEditorPane;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.StyleSheet;

import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewElementsManager;
import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewManager;
import freestyleLearning.learningUnitViewAPI.elementsContentsPanel.FSLAbstractLearningUnitViewElementContentPanel;
import freestyleLearning.learningUnitViewAPI.elementsContentsPanel.FSLAbstractLearningUnitViewElementsContentsPanel;
import freestyleLearning.learningUnitViewAPI.events.learningUnitEvent.FSLLearningUnitEventGenerator;
import freestyleLearning.learningUnitViewAPI.events.learningUnitViewEvent.FSLLearningUnitViewEvent;
import freestyleLearning.learningUnitViewAPI.events.learningUnitViewEvent.FSLLearningUnitViewVetoableAdapter;
import freestyleLearning.learningUnitViewAPI.util.FSLLearningUnitViewUtilities;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.textStudy.data.xmlBindingSubclasses.FLGTextStudyElement;

public class FLGTextStudyElementsContentsPanel extends FSLAbstractLearningUnitViewElementsContentsPanel {
    private FLGTextStudyTextElementContentPanel[] textElementContentPanels;
    private FSLLearningUnitEventGenerator learningUnitEventGenerator;

    public void init(FSLLearningUnitViewManager learningUnitViewManager,
        FSLLearningUnitEventGenerator learningUnitEventGenerator, boolean editMode) {
            super.init(learningUnitViewManager, learningUnitEventGenerator, editMode);
            learningUnitViewManager.addLearningUnitViewListener(
                new FLGTextStudyElementsContentsPanel_LearningUnitViewAdapter());
            this.learningUnitEventGenerator = learningUnitEventGenerator;
            textElementContentPanels = new FLGTextStudyTextElementContentPanel[2];
            textElementContentPanels[0] = new FLGTextStudyTextElementContentPanel();
            textElementContentPanels[1] = new FLGTextStudyTextElementContentPanel();
            for (int i = 0; i < 2; i++) {
                textElementContentPanels[i].init(learningUnitViewManager, learningUnitEventGenerator, editMode);
            }
    }

    public void setLearningUnitViewElementsManager(FSLLearningUnitViewElementsManager learningUnitViewElementsManager) {
        for (int i = 0; i < 2; i++) {
            textElementContentPanels[i].setLearningUnitViewElementsManager(learningUnitViewElementsManager);
        }
        super.setLearningUnitViewElementsManager(learningUnitViewElementsManager);
    }
    
    public JEditorPane getHTMLContentPane() {
    	return textElementContentPanels[0].getPrintableEditorPane();
    }

    public void updateUI() {
        for (int i = 0; i < 2; i++) {
            if (textElementContentPanels != null) textElementContentPanels[i].updateUI();
        }
        super.updateUI();
    }

    protected FSLAbstractLearningUnitViewElementContentPanel
        getElementContentPanel(int index, String learningUnitViewElementId) {
            FLGTextStudyElement learningUnitViewElement =
                (FLGTextStudyElement)learningUnitViewElementsManager.getLearningUnitViewElement(learningUnitViewElementId, false);
            if (learningUnitViewElement != null) {
                if (!learningUnitViewElement.getFolder()) {
                    /**
                     * to be continued for printing complete text study else if
                     * (!learningUnitViewElementId.equals(learningUnitViewManager.getActiveLearningUnitViewElementId())) {
                     * FLGTextStudyTextElementContentPanel textElementContentPanelForElementId
                     * = new FLGTextStudyTextElementContentPanel(); textElementContentPanelForElementId.init(learningUnitViewManager,
                     * learningUnitEventGenerator, false); textElementContentPanelForElementId.buildIndependentUI(learningUnitViewElementId);
                     * textElementContentPanelForElementId.buildDependentUI(true);
                     * javax.swing.JFrame frame = new javax.swing.JFrame(); frame.setSize(640,480);
                     * frame.getContentPane().setLayout(new java.awt.BorderLayout());
                     * frame.getContentPane().add(textElementContentPanelForElementId,
                     * java.awt.BorderLayout.CENTER); frame.show(); return textElementContentPanelForElementId; }
                     */
                    return textElementContentPanels[index];
                }
            }
            return null;
    }

    class FLGTextStudyElementsContentsPanel_LearningUnitViewAdapter extends FSLLearningUnitViewVetoableAdapter {
        public void learningUnitViewElementLinksRemoved(FSLLearningUnitViewEvent event) {
            if (event.getLearningUnitViewManagerId().equals(learningUnitViewManager.getLearningUnitViewManagerId())) {
                FLGTextStudyElement element = (FLGTextStudyElement)learningUnitViewElementsManager.getLearningUnitViewElement(event.getLearningUnitViewElementId(), true);
                if (element.getHtmlFileName() != null) {
                    element.setHtmlFileName(FSLLearningUnitViewUtilities.updateExternalHtmlFilesOnLinksRemovedEvent(event,
                        learningUnitViewElementsManager, element, element.getHtmlFileName(),
                        FLGTextStudyElement.ELEMENT_TYPE_TEXT, ".html"));
                }
            }
        }
    }
}
