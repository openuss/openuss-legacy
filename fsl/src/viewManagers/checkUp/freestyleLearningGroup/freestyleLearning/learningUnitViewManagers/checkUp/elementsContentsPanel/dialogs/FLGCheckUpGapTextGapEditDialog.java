/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.checkUp.elementsContentsPanel.dialogs;

import java.awt.BorderLayout;
import java.util.StringTokenizer;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JPanel;
import javax.swing.JTextArea;

import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.checkUp.data.xmlBindingSubclasses.FLGCheckUpElementGapTextGap;
import freestyleLearningGroup.independent.gui.FLGOptionPane;
import freestyleLearningGroup.independent.gui.FLGScrollPane;
import freestyleLearningGroup.independent.util.FLGInternationalization;

public class FLGCheckUpGapTextGapEditDialog {
	private FLGInternationalization internationalization;

	private JComponent dialogContentComponent;

	private JCheckBox checkBox_ignoreCase;

	private JTextArea textArea_solutions;

	public FLGCheckUpGapTextGapEditDialog() {
		internationalization = new FLGInternationalization(
				"freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.checkUp.elementsContentsPanel.internationalization",
				getClass().getClassLoader());
		buildIndependentUI();
	}

	public boolean showDialog(FLGCheckUpElementGapTextGap gapTextGap) {
		buildDependentUI(gapTextGap);
		int returnValue = FLGOptionPane.showConfirmDialog(
				dialogContentComponent, internationalization
						.getString("dialog.editGap.title"),
				FLGOptionPane.OK_CANCEL_OPTION, FLGOptionPane.PLAIN_MESSAGE);
		return returnValue == FLGOptionPane.OK_OPTION;
	}

	public void saveUserInput(FLGCheckUpElementGapTextGap gapTextGap) {
		Vector solutions = new Vector();
		StringTokenizer tokenizer = new StringTokenizer(textArea_solutions
				.getText(), "\n");
		while (tokenizer.hasMoreTokens())
			solutions.add(tokenizer.nextToken());
		gapTextGap.emptyGapTextSolutions();
		gapTextGap.getGapTextSolutions().addAll(solutions);
		gapTextGap.setIgnoreCase(checkBox_ignoreCase.isSelected());
	}

	private void buildIndependentUI() {
		dialogContentComponent = new JPanel(new BorderLayout());
		dialogContentComponent.setBorder(BorderFactory.createEmptyBorder(5, 5,
				5, 5));
		textArea_solutions = new JTextArea(5, 20);
		FLGScrollPane scrollPane = new FLGScrollPane(textArea_solutions);
		dialogContentComponent.add(scrollPane, BorderLayout.CENTER);
		checkBox_ignoreCase = new JCheckBox(internationalization
				.getString("checkBox_ignoreCase_label"));
		dialogContentComponent.add(checkBox_ignoreCase, BorderLayout.SOUTH);
	}

	private void buildDependentUI(FLGCheckUpElementGapTextGap gapTextGap) {
		String solutionsText = "";
		if (gapTextGap != null) {
			for (int i = 0; i < gapTextGap.getGapTextSolutions().size(); i++) {
				solutionsText = solutionsText
						+ (String) gapTextGap.getGapTextSolutions().get(i)
						+ "\n";
			}
			checkBox_ignoreCase.setSelected(gapTextGap.getIgnoreCase());
		}
		textArea_solutions.setText(solutionsText);
	}
}
