/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.slideShow.data.xmlBindingSubclasses;

import java.util.Date;
import java.util.Vector;

import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewElement;
import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewElementLink;
import freestyleLearning.learningUnitViewAPI.FSLLearningUnitViewElementsManager;
import freestyleLearningGroup.freestyleLearning.learningUnitViewManagers.slideShow.data.xmlBinding.ViewElement;

public class FLGSlideShowElement extends ViewElement implements FSLLearningUnitViewElement {
    public static String ELEMENT_TYPE_FOLDER = "folder";
    public static String ELEMENT_TYPE_SLIDESHOW = "slideShow";
    public static String ELEMENT_TYPE_SLIDE = "slide";
    private boolean modified;

    public boolean isModified() {
        return modified;
    }

    public void setModified(boolean modified) {
        this.modified = modified;
    }

    public FSLLearningUnitViewElement deepCopy() {
        FLGSlideShowElement copy = new FLGSlideShowElement();
        FSLLearningUnitViewElementsManager.copyLearningUnitViewElement(this, copy);
        copy.setImageFileName(getImageFileName());
        copy.setAudioFileName(getAudioFileName());
        if (hasDelayTime()) copy.setDelayTime(getDelayTime());
        return copy;
    }

    public String[] getLearningUnitViewElementExternalFilesRelativePaths(FSLLearningUnitViewElementsManager
        learningUnitViewElementsManager) {
            if (!getFolder()) {
                Vector paths = new Vector();
                if (getImageFileName() != null) paths.add(getImageFileName());
                if (getAudioFileName() != null) paths.add(getAudioFileName());
                return (String[]) paths.toArray(
                    new String[] { });
            }
            else
                return null;
    }

    public FSLLearningUnitViewElementLink getLearningUnitViewElementLink(String learningUnitViewElementLinkId) {
        for (int i = 0; i < getLearningUnitViewElementLinks().size(); i++) {
            FSLLearningUnitViewElementLink learningUnitViewElementLink =
                (FSLLearningUnitViewElementLink)getLearningUnitViewElementLinks().get(i);
            if (learningUnitViewElementLink.getId().equals(learningUnitViewElementLinkId))
                return learningUnitViewElementLink;
        }
        return null;
    }

    public FSLLearningUnitViewElementLink addNewLearningUnitViewElementLink() {
        FLGSlideShowElementLink learningUnitViewElementLink = new FLGSlideShowElementLink();
        learningUnitViewElementLink.emptyLearningUnitViewElementLinkTargets();
        return FSLLearningUnitViewElementsManager.addLearningUnitViewElementLink(learningUnitViewElementLink, this);
    }

    public void setType(String type) {
        if (!type.equals(getType())) {
            this.emptyLearningUnitViewElementLinks();
            if (type.equals(ELEMENT_TYPE_FOLDER)) {
                this.setImageFileName(null);
                this.setAudioFileName(null);
            }
            super.setType(type);
        }
    }
}
