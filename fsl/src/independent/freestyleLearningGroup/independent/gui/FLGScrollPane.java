/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.independent.gui;

import java.awt.Component;

import javax.swing.JScrollPane;

// WORKAROUND #1
// Fixes a problem with the JScrollPane when it is used with the FLGHtmlPane. Because the
// FLGHtmlPane overrides the getPreferredSize() method to force
// the width of the FLGHtmlPane to be the same as the width of the Viewport of the JScrollPane, it
// must be ensured, that - whenever the size of the JScrollPane
// is modified - it asks the view for its preferredSize.
public class FLGScrollPane extends JScrollPane {
    private final int UNIT_INCREMENT = 15;

    public FLGScrollPane() {
        super();
        getVerticalScrollBar().setUnitIncrement(UNIT_INCREMENT);
        getHorizontalScrollBar().setUnitIncrement(UNIT_INCREMENT);
    }

    public FLGScrollPane(int vsbPolicy, int hsbPolicy) {
        super(vsbPolicy, hsbPolicy);
        getVerticalScrollBar().setUnitIncrement(UNIT_INCREMENT);
        getHorizontalScrollBar().setUnitIncrement(UNIT_INCREMENT);
    }

    public FLGScrollPane(Component view) {
        super(view);
        getVerticalScrollBar().setUnitIncrement(UNIT_INCREMENT);
        getHorizontalScrollBar().setUnitIncrement(UNIT_INCREMENT);
    }

    public FLGScrollPane(Component view, int vsbPolicy, int hsbPolicy) {
        super(view, vsbPolicy, hsbPolicy);
        getVerticalScrollBar().setUnitIncrement(UNIT_INCREMENT);
        getHorizontalScrollBar().setUnitIncrement(UNIT_INCREMENT);
    }

    public void setBounds(int x, int y, int w, int h) {
        super.setBounds(x, y, w, h);
        setViewport(getViewport());
    }
}
