/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.independent.world3D;

/**
 * <code>FLGPoint</code> repr&auml;sentiert einen Punkt <code>(x,y,z)</code>
 * im dreidimensionalen Koordinatenraum, spezifiziert in <code>double</code> Pr&auml;zision.<P>
 * Ein Punkt kann entweder absolut oder relativ zu einem anderen Punkt beschrieben werden. Ist der
 * Punkt absolut beschrieben, werden die <i>x</i>, <i>y</i> und <i>z</i> Koordinaten angegeben.
 * Ist der Punkt relativ zu einem anderen Punkt beschrieben ist er <i>indirect</i> und speichert den Index des Punktes und den
 * Index des Vektors durch die er beschrieben wird. Der Punkt hat ein weiteres Attribute um zu bestimmen ob bereits berechnet
 * wurde.<p> Durch die Klasse <code>FLGFace</code> werden die Punkte zu Fl&auml;chen zusammengefasst, um letztendlich in einer
 * <code>FLGWorld3D</code> als Objekte einzufliessen.<p> <b>Beispiel</b>:  Erzeugt drei Punkte und einen Vektor.Der 3. Punkt
 * ist relativ zu dem 2. Punkt definiert und ist zuf&auml;llig gleich dem 1. Punkt. <p> <pre>
 *  FLGPoint[] points  = new FLGPoint[3];
 *  FLGPoint[] vectors = new FLGPoint[1];
 *
 *  vectors[0] = new FLGPoint(2.0, 3.0, 0.0);
 *  points[0]  = new FLGPoint(3.0, 4.0, 1.0);
 *  points[1]  = new FLGPoint(1.0, 1.0, 1.0);
 *  points[2]  = new FLGPoint(1,0);
 *  </pre> </p> <p> Dass die Indizes die an <i>indirect</i> definierte Punkte &uuml;bergeben
 * werden, zu den an den Konstruktor eines <code>FLGObj3D</code> Punkte- und Vektoren-Arrays
 * passen, liegt in der Verantwortlichkeit des Benutzers.<p>
 * @see FLGFace
 * @see FLGObj3D
 */
public class FLGPoint {
    /** Koordinate eines absoluten <code>FLGPoint</code>. */
    public double x;
    public double y;
    public double z;

    /** Index des Bezugspunktes eines relativen <code>FLGPoint</code>. */
    public int pntInd;

    /** Index des Vektors eines relativen <code>FLGPoint</code>. */
    public int vectInd;

    /** Ist der <code>FLGPoint</code> berechnet? */
    public boolean calculated = false; // Initialisierung eingefuegt, AS

    /** Ist der <code>FLGPoint</code> <i>indirect</i> beschrieben? */
    public boolean indirect = false; // Initialisierung eingefuegt, AS

    /** Erzeugt einen <code>FLGPoint</code> und initialisiert ihn mit <code>(0,0,0)</code>. */
    public FLGPoint() {
        this(0, 0, 0);
    }

    /**
     * Erzeugt einen absoluten <code>FLGPoint</code> und initialisiert ihn mit <i>x, y</i> und <i>z</i>.
     * @param	x,&nbsp;y,&nbsp;z	die <i>x, y,</i> und <i>z</i> Koordinate.
     */
    public FLGPoint(double x, double y, double z) {
        this.x = x;
        this.y = y;
        this.z = z;
        // AS calculated = false;
        // AS indirect = false;
    }

    /**
     * Erzeugt einen relativen <code>FLGPoint</code>, initialisiert ihn mit <code>(0,0,0)</code>
     * und den Indizes des spezifizierten Bezugspunktes und des spezifizierten Vektors..
     * @param	pntInd		der Index des Bezugspunktes.
     * @param	vectInd		der index des Vektors.
     */
    public FLGPoint(int pntInd, int vectInd) {
        this.x = 0;
        this.y = 0;
        this.z = 0;
        this.pntInd = pntInd;
        this.vectInd = vectInd;
        indirect = true;
    }

    /**
     * Liefert eine textuelle Beschreibung des <code>FLGPoint</code> in der Form <code>(x, y, z)</code>.
     * @return	textuelle Beschreibung des <code>FLGPoint</code>.
     */
    public String toString() {
        return "(" + x + "," + y + "," + z + ")";
    }
}
