/* Generated by Freestyle Learning Group */

package freestyleLearningGroup.independent.plotter;

import java.awt.Color;
import java.awt.Stroke;
import java.io.Serializable;

/**
 * Eine <code>FLGFunction2D</code> repr&auml;sentiert eine Funktion für einen spezifizierten
 * Wertebereich. Jeder <code>FLGFunction2D</code> ist eine Farbe zugeordnet, die Standardfarbe ist
 * schwarz.<p> Diese Klasse ist abstrakt und kann nicht benutzt werden ohne daß die abstrakte <code>calculate</code> Methode
 * implementiert wird.<p> Wenn diese Funktion in einem Plotter benutzt werden soll, der eine Legende zu seinen
 * Funktionen anzeigt, muss der Name der Funktion entweder im Konstruktor mit angegeben werden,
 * oder explizit durch die Methode <code>setName(String name)</code> gesetzt werden.<p>
 * <b>Beispiel</b>: Erzeugt eine Funktion, die die Sinusfunktion
 * repr&auml;sentiert, in Rot gezeichnet wird wird und mit der Bezeichnung "Sinus" in einer
 * Plotter-Legende auftauchen w&uuml;rde. Die Funktion ist &uuml;ber den gesamten
 * <code>double</code>-Wertebereich definiert. <p> <pre>
 *  FLGFunction2D sinus = new FLGFunction2D(Double.NEGATIVE_INFINITY,
 *                                        Double.POSITIVE_INFINITY) {
 *    public double calculate(double x) {
 *      return Math.sin(x);
 *    }
 *  };
 *  sinus.setColor(Color.red);
 *  sinus.setName("Sinus");
 *  </pre> </p>
 * @see	#calculate(double x)
 * @see	FLGFunctionGroup2D
 * @see	FLGPlotter2D
 */
public abstract class FLGFunction2D implements Serializable {
    private double minX, maxX;
    private Color color = Color.black;
    private Stroke stroke = null;

    /** Der Name der Funktionsgruppe, der in der Legende angezeigt werden soll. */
    private String name = null;

    /**
     * Erzeugt eine <code>FLGFunction2D</code> mit dem spezifizierten Wertebereich.
     * @param	minX	Untergrenze des Wertebereichs.
     * @param	maxX	Obergrenze des Wertebereichs.
     */
    public FLGFunction2D(double minX, double maxX) {
        this.minX = minX;
        this.maxX = maxX;
    }

    /**
     * Erzeugt eine <code>FLGFunction2D</code> mit dem spezifizierten Wertebereich und dem spezifizierten Namen.
     * @param	minX	Untergrenze des Wertebereichs.
     * @param	maxX	Obergrenze des Wertebereichs.
     * @param	name	der Name der Funktion.
     */
    public FLGFunction2D(double minX, double maxX, String name) {
        this.minX = minX;
        this.maxX = maxX;
        setName(name);
    }
    //
    // Access Methods
    //

    /**
     * Setzt den spezifizierten Namen f&uuml;r die Legende.
     * @param	name	der neue Name der Funktionsgruppe.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Liefert den Namen f&uuml;r die Legende.
     * @return	den Namen der Funktionsgruppe oder <code>null</code>.
     */
    public String getName() {
        return name;
    }

    /**
     * Liefert die Untergrenze des Wertebereichs.
     * @return	minX.
     */
    public double getMinX() { return minX; }

    /**
     * Liefert die Obergrenze des Wertebereichs.
     * @return	maxX.
     */
    public double getMaxX() { return maxX; }

    /**
     * Setzt den minimalen x-Wert.
     * @param	x der neue minimale x-Wert.
     */
    public void setMinX(double x) { minX = x; }

    /**
     * Setzt den maximalen x-Wert.
     * @param	x der neue maximale x-Wert.
     */
    public void setMaxX(double x) { maxX = x; }

    /**
     * Weist der Funktion die spezifizierte Farbe zu. Die Standardfarbe ist schwarz.
     * @param	c	die Farbe.
     */
    public void setColor(Color c) { this.color = c; }

    /**
     * Liefert die der Funktion zugeordnete Farbe.
     * @return die Farbe.
     */
    public Color getColor() { return color; }

    /**
     * Weist der Funktion die spezifizierte Strichart zu.<p> Die Zuweisung von Linienarten wird
     * empfohlen, da dadurch die &quot;Lesbarkeit&quot; deutlich erh&ouml;ht wird, wenn der
     * Plotter auf einem nicht-farbf&auml;higen Drucker ausgegeben wird. Eine Reihe von vordefinierten Linienarten sind in der
     * Klasse <code>FLGGraphics</code> zu finden. <p> <pre>
	 *  sinus.setStroke(FLGGraphics.getStroke(FLGGraphics.STROKE_DASHED));
	 *  </pre> </p>
     * @param	stroke	die Linienart.
     * @see freestyleLearningGroup.independent.util.FLGGraphics
     */
    public void setStroke(Stroke stroke) { this.stroke = stroke; }

    /**
     * Liefert die der Funktion zugeordnete Farbe.
     * @return die Lienienart.
     */
    public Stroke getStroke() { return stroke; }

    /**
     * Liefert den <i>y</i>-Wert der Funktion für der spezifizierten <i>x</i>-Wert.
     * @param	x	der x-Wert.
     * @return	das Ergebnis.
     */
    public abstract double calculate(double x);

    /**
     * Prüft, ob der spezifizierte Wert innerhalb oder ausserhalb des Wertebereiches liegt.
     * @param	x	zu pr&uuml;fender Wert.
     * @return	<code>true</code> bzw. <code>false</code> wenn der spezifizierte Wert innerhalb
     * bzw. ausserhalb des Wertebereiches liegt.
     */
    public boolean contains(double x) {
        return (minX <= x) && (x <= maxX);
    }
}
