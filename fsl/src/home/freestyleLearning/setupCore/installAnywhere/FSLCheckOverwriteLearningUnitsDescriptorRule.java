/* Generated by Freestyle Learning Group */

package freestyleLearning.setupCore.installAnywhere;

import java.io.File;

import com.zerog.ia.api.pub.CustomCodeRule;

import freestyleLearningGroup.independent.gui.FLGOptionPane;
import freestyleLearningGroup.independent.util.FLGInternationalization;
import freestyleLearningGroup.independent.util.FLGUtilities;

/** @author  Mirko Wahn */
public class FSLCheckOverwriteLearningUnitsDescriptorRule extends CustomCodeRule {
    private FLGInternationalization internationalization;
    private String learningUnitsSubDirectoryName = "learningUnits";
    private String learningUnitsDescriptorName = "learningUnitsDescriptor.xml";
    private boolean evaluate = true;

    public FSLCheckOverwriteLearningUnitsDescriptorRule() {
        internationalization = new FLGInternationalization("freestyleLearning.setupCore.installAnywhere.internationalization",
            getClass().getClassLoader());
    }

    /**
     * <p>This method is called at install-time when evaluating the rules set on a given installer action.</p>
     * @return <code>true</code> if the rule has evaluated to true (i.e., positive case), <code>false</code> otherwise.
     */
    public boolean evaluateRule() {
        /*
         * check if any descriptor already exists
         * and prompt user for overwriting
         */

        String userInstallDir = ruleProxy.substitute("$USER_INSTALL_DIR$");
        String fileSeparator = ruleProxy.substitute("$prop.file.separator$");
        String installFeaturesList = ruleProxy.substitute("$CHOSEN_INSTALL_BUNDLE_LIST$");
        if (FLGUtilities.contains(installFeaturesList, "config")) {
            File installedDescriptorFile = new File(userInstallDir + fileSeparator + learningUnitsSubDirectoryName +
                fileSeparator + learningUnitsDescriptorName);
            System.out.println("\ninstalledDescriptorFile = " + installedDescriptorFile);
            if (installedDescriptorFile.exists()) {
                System.out.println("\texists");
                evaluate = (FLGOptionPane.showConfirmDialog(internationalization.getString("message.label.luDescriptorFound"),
                    internationalization.getString("message.title.copyDescriptor"),
                    FLGOptionPane.YES_NO_OPTION, FLGOptionPane.QUESTION_MESSAGE) == FLGOptionPane.YES_OPTION);
            }
        }
        return evaluate;
    }
}
