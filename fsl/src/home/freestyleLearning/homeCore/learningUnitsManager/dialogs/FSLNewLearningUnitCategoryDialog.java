/* Generated by Freestyle Learning Group */

package freestyleLearning.homeCore.learningUnitsManager.dialogs;

import java.awt.BorderLayout;
import java.util.List;
import java.util.*;
import javax.swing.*;

import freestyleLearningGroup.independent.gui.FLGColumnLayout;
import freestyleLearningGroup.independent.gui.FLGDialogInputVerifier;
import freestyleLearningGroup.independent.gui.FLGOptionPane;
import freestyleLearningGroup.independent.util.FLGInternationalization;
import freestyleLearning.homeCore.learningUnitsManager.data.xmlBindingSubclasses.FSLLearningUnitDescriptor;
import freestyleLearning.homeCore.learningUnitsManager.data.xmlBindingSubclasses.FSLLearningUnitsDescriptor;

/**
 * @author Carsten Fiedler
 * Carsten Fiedler modified 18.08.2005 
 * 
 * Dialog for adding a new learning unit category.
 */
public class FSLNewLearningUnitCategoryDialog implements FLGDialogInputVerifier {
    protected FLGInternationalization internationalization;
    protected FSLLearningUnitsDescriptor learningUnitsDescriptor;
    protected JPanel dialogContentComponent;
    protected JPanel dialogPanel;
    protected JTextField textField_learningUnitCategoryId;
    protected JTextField textField_learningUnitCategoryTitle;
    protected String learningUnitCategoryId;
    protected String learningUnitCategoryTitle;

    public FSLNewLearningUnitCategoryDialog(FSLLearningUnitsDescriptor learningUnitsDescriptor) {
        internationalization = new FLGInternationalization("freestyleLearning.homeCore.learningUnitsManager.dialogs.internationalization",
            getClass().getClassLoader());
        this.learningUnitsDescriptor = learningUnitsDescriptor;
        buildIndependentUI();
    }

    public boolean showDialog() {
        int returnValue = FLGOptionPane.showConfirmDialog(this, dialogPanel, internationalization.getString("dialog.NewLearningUnitCategory.title"),
            FLGOptionPane.OK_CANCEL_OPTION, FLGOptionPane.PLAIN_MESSAGE);
        if (returnValue == FLGOptionPane.OK_OPTION) {
        	learningUnitCategoryId = textField_learningUnitCategoryId.getText();
        	// check, if id is alread in use
       		List learningUnitDescriptorList = learningUnitsDescriptor.getLearningUnitsDescriptors();
       		Iterator iter = learningUnitDescriptorList.iterator();
       		while (iter.hasNext()) {
       			FSLLearningUnitDescriptor learningUnitDescriptor = (FSLLearningUnitDescriptor) iter.next();
       			if (learningUnitCategoryId.equals(learningUnitDescriptor.getId())) {
       				// open message pane an dialog to change id
       				JPanel errorPanel = new JPanel();
       	    		errorPanel.add(new JLabel(internationalization.getString("dialog.new_category.error_message")));
       	    		returnValue = FLGOptionPane.showConfirmDialog(errorPanel, internationalization.getString("dialog.new_category.error_message.window_title") , FLGOptionPane.OK_OPTION, FLGOptionPane.ERROR_MESSAGE);
       	    		if (returnValue==FLGOptionPane.OK_OPTION) {
       	    			showDialog();
       	    		}
       			}
       		}	
            learningUnitCategoryId = textField_learningUnitCategoryId.getText();
            learningUnitCategoryTitle = textField_learningUnitCategoryTitle.getText();
        }
        return returnValue == FLGOptionPane.OK_OPTION;
    }

    public String verifyInput() {
        String errorString = "";
        if (textField_learningUnitCategoryId.getText().length() == 0) {
            errorString += internationalization.getString("label.learningUnitCategoryId.title") + ": " +
                internationalization.getString("text.missingValue") + "\n";
        }
        if (textField_learningUnitCategoryTitle.getText().length() == 0) {
            errorString += internationalization.getString("label.learningUnitCategoryTitle.title") + ": " +
                internationalization.getString("text.missingValue") + "\n";
        }
        if (errorString.length() > 0)
            return errorString;
        else
            return null;
    }

    public String getlearningUnitCategoryId() {
        return learningUnitCategoryId;
    }

    public String getlearningUnitCategoryTitle() {
        return learningUnitCategoryTitle;
    }

    public void clearEntries() {
        buildDependentUI();
    }

    void buildDependentUI() {
    	textField_learningUnitCategoryId.setText("");
    	textField_learningUnitCategoryTitle.setText("");
    }

    void buildIndependentUI() {
        dialogPanel = new JPanel(new BorderLayout());
        dialogPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        dialogContentComponent = new JPanel(new FLGColumnLayout());
        dialogContentComponent.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        textField_learningUnitCategoryId = new JTextField(25);
        textField_learningUnitCategoryTitle = new JTextField(25);
        dialogContentComponent.add(
            new JLabel(internationalization.getString("label.learningUnitCategoryTitle.title")), FLGColumnLayout.LEFT);
        dialogContentComponent.add(textField_learningUnitCategoryTitle, FLGColumnLayout.LEFTEND);
        dialogContentComponent.add(
                new JLabel(internationalization.getString("label.learningUnitCategoryId.title")), FLGColumnLayout.LEFT);
            dialogContentComponent.add(textField_learningUnitCategoryId, FLGColumnLayout.LEFTEND);
        dialogPanel.add(dialogContentComponent, BorderLayout.CENTER);
    }
}