/* Generated by FreestyleLearninngGroup */

package freestyleLearning.homeCore.learningUnitsManager.dialogs;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.JFrame;

import freestyleLearningGroup.independent.gui.FLGColumnLayout;
import freestyleLearningGroup.independent.gui.FLGDialogInputVerifier;
import freestyleLearningGroup.independent.gui.FLGOptionPane;
import freestyleLearningGroup.independent.util.FLGInternationalization;

public class FSLPrintDialog implements FLGDialogInputVerifier  {
    private String printTitle;
    private String printMessage;
    private String printAllElements;
    private JCheckBox checkBox_printTitle;
    private JCheckBox checkBox_printMessage;
    private JCheckBox checkBox_scaleToFit;
    private JCheckBox checkBox_printAllElements;
    private int printSelection;
    private boolean printAllElementsIsSelected = false;
    private boolean printAllAllowed;
    private boolean useDefaultPrinting;
    protected FLGInternationalization internationalization;
    protected JPanel dialogContentComponent;
    protected JTextField textField_printTitle;
    protected JTextArea textArea_printMessage;
    
    public FSLPrintDialog(String printTitle, String printMessage, boolean printAllAllowed, boolean useDefaultPrinting) {
        this.printTitle = printTitle;
        this.printMessage = printMessage;
        this.printAllAllowed = printAllAllowed;
        this.useDefaultPrinting = useDefaultPrinting;
        internationalization = new FLGInternationalization("freestyleLearning.homeCore.learningUnitsManager.dialogs.internationalization",
        getClass().getClassLoader());
        buildIndependentUI();
    }
    
    public boolean showDialog(String printTitle) {
        this.printTitle = printTitle;
        buildDependentUI();
        int returnValue = FLGOptionPane.showConfirmDialog(this, dialogContentComponent, internationalization.getString("dialog.printDialog.title"), FLGOptionPane.OK_CANCEL_OPTION, FLGOptionPane.PLAIN_MESSAGE);
        if (returnValue == FLGOptionPane.OK_OPTION) {
            printTitle = textField_printTitle.getText();
            printMessage = textArea_printMessage.getText();
        }
        return returnValue == FLGOptionPane.OK_OPTION;
    }
    
    public String getPrintTitle() {
        return textField_printTitle.getText();
    }
    
    public String getPrintMessage() {
        return textArea_printMessage.getText();
    }
    
    public int getPrintSelection() {
        return printSelection;
    }
    
    /** Carsten Fiedler, 28.04.2004 **/
    public boolean getPrintAllElementsIsSelected() {
        return printAllElementsIsSelected;
    }
    
    public String verifyInput() {
        return null;
    }
    
    public void setScaleToFit(boolean scaleToFit) {
        checkBox_scaleToFit.setSelected(scaleToFit);
    }
    

    public boolean isScaleToFit() {
        return checkBox_scaleToFit.isSelected();
    }
    
    void buildDependentUI() {
        if (checkBox_printTitle.isSelected()) textField_printTitle.setText(printTitle);
        if (checkBox_printMessage.isSelected()) textArea_printMessage.setText(printMessage);
    }
    
    void buildIndependentUI() {
        dialogContentComponent = new JPanel(new BorderLayout());
        JPanel printInputPanel = new JPanel(new FLGColumnLayout());
        JPanel printOptionsPanel = new JPanel(new FLGColumnLayout());
        printInputPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        printOptionsPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        checkBox_scaleToFit = new JCheckBox(internationalization.getString("label.printDialog.scaleToFit"));
        checkBox_scaleToFit.setSelected(true);
        
        // Carsten Fiedler, 25.04.2004
        checkBox_printAllElements = new JCheckBox(internationalization.getString("label.printDialog.printAllElements"));
        checkBox_printAllElements.setEnabled(printAllAllowed);
        checkBox_printAllElements.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // if selected, deactivate checkBoxes for title and message
                printAllElementsIsSelected = checkBox_printAllElements.isSelected();
                checkBox_printTitle.setEnabled(!printAllElementsIsSelected);
                checkBox_printMessage.setEnabled(!printAllElementsIsSelected);
                textField_printTitle.setEnabled(!printAllElementsIsSelected);
                textArea_printMessage.setEnabled(!printAllElementsIsSelected);
                checkBox_scaleToFit.setEnabled(!printAllElementsIsSelected);
            }
        });
        // Carsten Fiedler finished
        
        checkBox_printTitle = new JCheckBox(internationalization.getString("label.printDialog.printTitle"));
        checkBox_printTitle.addActionListener(
        new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                enableTitleComponents(checkBox_printTitle.isSelected());
            }
        });
        checkBox_printMessage = new JCheckBox(internationalization.getString("label.printDialog.printMessage"));
        checkBox_printMessage.addActionListener(
        new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                enableMessageComponents(checkBox_printMessage.isSelected());
            }
        });
        textField_printTitle = new JTextField(20);
        textArea_printMessage = new JTextArea(5, 20);
        textArea_printMessage.setFont(textField_printTitle.getFont());
        textArea_printMessage.setLineWrap(true);
        textArea_printMessage.setWrapStyleWord(true);
        JScrollPane scrollPane_printMessage = new JScrollPane(textArea_printMessage);
        scrollPane_printMessage.setBorder(BorderFactory.createLoweredBevelBorder());

        if (printAllAllowed) {
            printInputPanel.add(checkBox_printAllElements, FLGColumnLayout.LEFTEND);
        }
        if (useDefaultPrinting) {
            printInputPanel.add(checkBox_printTitle, FLGColumnLayout.LEFT);
            printInputPanel.add(textField_printTitle, FLGColumnLayout.LEFTEND);
            printInputPanel.add(checkBox_printMessage, FLGColumnLayout.LEFT);
            printInputPanel.add(scrollPane_printMessage, FLGColumnLayout.LEFTEND);        
            printOptionsPanel.add(checkBox_scaleToFit, FLGColumnLayout.LEFTEND);
        }
        dialogContentComponent.add(printInputPanel, BorderLayout.NORTH);
        dialogContentComponent.add(printOptionsPanel, BorderLayout.CENTER);
        enableComponents(true);
    }
    
    private void enableTitleComponents(boolean enabled) {
        if (enabled) {
            textField_printTitle.setText(printTitle);
        }
        else {
            printTitle = textField_printTitle.getText();
            textField_printTitle.setText("");
        }
        textField_printTitle.setEnabled(enabled);
    }
    
    private void enableMessageComponents(boolean enabled) {
        if (enabled) {
            textArea_printMessage.setText(printMessage);
        }
        else {
            printMessage = textArea_printMessage.getText();
            textArea_printMessage.setText("");
        }
        textArea_printMessage.setEnabled(enabled);
    }
    
    private void enableComponents(boolean enabled) {
        checkBox_printTitle.setSelected(enabled);
        checkBox_printMessage.setSelected(enabled);
        enableMessageComponents(enabled);
        enableTitleComponents(enabled);
    }
    
}

