/* Generated by Freestyle Learning Group */

package freestyleLearning.homeCore.learningUnitsManager.dialogs;

import java.util.List;
import java.util.Vector;

import freestyleLearningGroup.independent.gui.FLGOptionPane;
import freestyleLearningGroup.independent.gui.documents.FLGDigitDocument;
import freestyleLearningGroup.independent.gui.documents.FLGLetterDocument;

public class FSLLearningUnitPropertiesDialog extends FSLNewLearningUnitDialog {
    public FSLLearningUnitPropertiesDialog(String[] [] installedLearningUnitViewManagersIdsAndTitles) {
        super(installedLearningUnitViewManagersIdsAndTitles);
        textField_learningUnitId.setEditable(false);
        textField_learningUnitId.setEnabled(false);
    }

    public boolean showPropertiesDialog(String currentLearningUnitId, String openUssServerName, String learningUnitTitle, String learningUnitVersion,
        String learningUnitAuthors, String enrollmentId, List learningUnitViewManagers) {
            buildDependentUI();
            FLGLetterDocument letterDocument = new FLGLetterDocument();
            letterDocument.setText(currentLearningUnitId);
            textField_learningUnitId.setDocument(letterDocument);
            textField_learningUnitTitle.setText(learningUnitTitle);
            FLGDigitDocument digitDocument = new FLGDigitDocument();
            digitDocument.setText(learningUnitVersion);
            textField_learningUnitVersion.setDocument(digitDocument);
            textArea_learningUnitAuthors.setText(learningUnitAuthors);
            this.enrollmentId = enrollmentId;
            textField_learningUnitEnrollmentId.setText(enrollmentId);
            textField_OpenUssServerName.setText(openUssServerName);
            checkbox_enableEnrollmentId.setSelected(enrollmentId != null);
            textField_learningUnitEnrollmentId.setEnabled(checkbox_enableEnrollmentId.isSelected());
            textField_OpenUssServerName.setEnabled(checkbox_enableEnrollmentId.isSelected());
            for (int i = 0; i < checkBoxes_learningUnitViewManagersIds.length; i++) {
                checkBoxes_learningUnitViewManagersIds[i].setSelected(learningUnitViewManagers.contains(installedLearningUnitViewManagersIdsAndTitles[i] [0]));
            }
            int returnValue = FLGOptionPane.showConfirmDialog(this, dialogPanel,
                internationalization.getString("dialog.LearningUnitProperties.title"),
                FLGOptionPane.OK_CANCEL_OPTION, FLGOptionPane.PLAIN_MESSAGE);
            if (returnValue == FLGOptionPane.OK_OPTION) {
                this.learningUnitId = textField_learningUnitId.getText();
                this.learningUnitTitle = textField_learningUnitTitle.getText();
                this.learningUnitVersion = textField_learningUnitVersion.getText();
                this.learningUnitAuthors = textArea_learningUnitAuthors.getText();
                enrollmentId = textField_learningUnitEnrollmentId.getText();
                openUssServerName = textField_OpenUssServerName.getText();
                selectedLearningUnitViewManagersIds = new Vector();
                for (int i = 0; i < checkBoxes_learningUnitViewManagersIds.length; i++)
                    if (checkBoxes_learningUnitViewManagersIds[i].isSelected())
                        selectedLearningUnitViewManagersIds.add(installedLearningUnitViewManagersIdsAndTitles[i] [0]);
            }
            return returnValue == FLGOptionPane.OK_OPTION;
    }
}
