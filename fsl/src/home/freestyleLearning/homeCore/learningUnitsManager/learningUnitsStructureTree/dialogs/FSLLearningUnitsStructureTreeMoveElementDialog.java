/* Generated by Freestyle Learning Group */

package freestyleLearning.homeCore.learningUnitsManager.learningUnitsStructureTree.dialogs;

import javax.swing.*;

import freestyleLearningGroup.independent.gui.*;
import freestyleLearningGroup.independent.util.*;

/**
 * @author Carsten Fiedler
 * Carsten Fiedler modified 01.09.2005
 */
public class FSLLearningUnitsStructureTreeMoveElementDialog {
    public static final int INSERT_BEFORE = 1;
    public static final int INSERT_AFTER = 2;
    public static final int INSERT_AS_CHILD = 3;
    private FLGInternationalization internationalization;
    private JPanel dialogContentComponent;
    private JRadioButton radioButton_insertBefore;
    private JRadioButton radioButton_insertAfter;
    private JRadioButton radioButton_insertAsChild;
    private int insertCommand;
    
    public FSLLearningUnitsStructureTreeMoveElementDialog() {
        internationalization = new FLGInternationalization("freestyleLearning.homeCore.learningUnitsManager.learningUnitsStructureTree.internationalization",
            getClass().getClassLoader());
    }

    public int showDialog(boolean insertChildIsAllowed) {
        buildDependentUI(insertChildIsAllowed);
        int returnValue = FLGOptionPane.showConfirmDialog(dialogContentComponent, internationalization.getString("dialog.moveElement.title"),
            FLGOptionPane.OK_CANCEL_OPTION, FLGOptionPane.PLAIN_MESSAGE);
        if (radioButton_insertBefore.isSelected()) insertCommand = INSERT_BEFORE;
        if (radioButton_insertAfter.isSelected()) insertCommand = INSERT_AFTER;
        if (insertChildIsAllowed) {
        	if (radioButton_insertAsChild.isSelected()) insertCommand = INSERT_AS_CHILD;
        }
        return returnValue;
    }

    public int getInsertCommand() {
        return insertCommand;
    }

    private void buildDependentUI(boolean insertChildIsAllowed) {
    	dialogContentComponent = new JPanel(new FLGColumnLayout());
        dialogContentComponent.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
        ButtonGroup checkBoxGroup = new ButtonGroup();
        radioButton_insertBefore = new JRadioButton(internationalization.getString("label.insertBefore.title"));
        radioButton_insertAfter = new JRadioButton(internationalization.getString("label.insertAfter.title"));
        if (insertChildIsAllowed) {
        	radioButton_insertAsChild = new JRadioButton(internationalization.getString("label.insertAsChild.title"));
        	dialogContentComponent.add(radioButton_insertAsChild, FLGColumnLayout.LEFTEND);
        	radioButton_insertAsChild.setSelected(true);
            checkBoxGroup.add(radioButton_insertAsChild);
        } else {
        	radioButton_insertBefore.setSelected(true);
        }
        dialogContentComponent.add(radioButton_insertBefore, FLGColumnLayout.LEFTEND);
        dialogContentComponent.add(radioButton_insertAfter, FLGColumnLayout.LEFTEND);
        checkBoxGroup.add(radioButton_insertBefore);
        checkBoxGroup.add(radioButton_insertAfter);

    }
}
