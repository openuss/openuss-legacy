#set($testClassName = "${entity.daoName}TestBase")
#set ($generatedFile = "${entity.packagePath}/${testClassName}.java")
#if ($enableTemplating)
#set ($entityCollectionType = "java.util.Collection<${entity.fullyQualifiedEntityName}>")
#else
#set ($entityCollectionType = "java.util.Collection")
#end
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

import org.springframework.test.AbstractTransactionalDataSourceSpringContextTests;
import org.apache.log4j.Logger;

#set($varDao = "${stringUtils.uncapitalize($entity.daoName)}")
#set($varEntity = "${stringUtils.uncapitalize($entity.name)}")

/**
 * JUnit Test for Spring Hibernate ${entity.daoName} class.
 * @see ${entity.packageName}.${entity.daoName}
 */
public abstract class ${testClassName} extends AbstractTransactionalDataSourceSpringContextTests {
	
	protected static final Logger logger = Logger.getLogger(${testClassName}.class);

	protected ${entity.daoName} $varDao;
	
	public ${entity.daoName} get${entity.daoName}() {
		return $varDao;
	}

	public void set${entity.daoName}(${entity.daoName} ${varDao}) {
		this.$varDao = $varDao;
	}

	public void test${entity.daoName}Injection() {
		assertNotNull($varDao);
	}
	
	protected String[] getConfigLocations() {
		return new String[] { 
			"classpath*:applicationContext.xml",
			"classpath*:applicationContext-localDataSource.xml",
			"classpath*:applicationContext-beans.xml", 
			"classpath*:applicationContext-tests.xml", 
			"classpath*:beanRefFactory",
			"classpath*:testSecurity.xml",
			"classpath*:testDataSource.xml"};
	}
}