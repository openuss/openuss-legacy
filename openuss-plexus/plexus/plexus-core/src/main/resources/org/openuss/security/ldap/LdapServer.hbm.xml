<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="org.openuss.security.ldap.LdapServerImpl" table="SECURITY_LDAP_SERVER" dynamic-insert="false" dynamic-update="false">
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="sequence">
                <param name="sequence">GLOBAL_SEQUENCE</param>
            </generator>
        </id>
        <property name="providerUrl" type="java.lang.String">
            <column name="PROVIDER_URL" not-null="true" unique="false" sql-type="VARCHAR(250)"/>
        </property>
        <property name="port" type="java.lang.Integer">
            <column name="PORT" not-null="true" unique="false" sql-type="INTEGER"/>
        </property>
        <property name="rootDn" type="java.lang.String">
            <column name="ROOT_DN" not-null="true" unique="false" sql-type="VARCHAR(250)"/>
        </property>
        <property name="authenticationType" type="java.lang.String">
            <column name="AUTHENTICATION_TYPE" not-null="true" unique="false" sql-type="VARCHAR(64)"/>
        </property>
        <property name="managerDn" type="java.lang.String">
            <column name="MANAGER_DN" not-null="false" unique="false" sql-type="VARCHAR(64)"/>
        </property>
        <property name="managerPassword" type="java.lang.String">
            <column name="MANAGER_PASSWORD" not-null="false" unique="false" sql-type="VARCHAR(64)"/>
        </property>
        <property name="useConnectionPool" type="java.lang.Boolean">
            <column name="USE_CONNECTION_POOL" not-null="true" unique="false" sql-type="SMALLINT"/>
        </property>
        <property name="useLdapContext" type="java.lang.Boolean">
            <column name="USE_LDAP_CONTEXT" not-null="true" unique="false" sql-type="SMALLINT"/>
        </property>
        <property name="description" type="java.lang.String">
            <column name="DESCRIPTION" not-null="true" unique="false" sql-type="VARCHAR(32000)"/>
        </property>
        <property name="ldapServerType" type="org.openuss.security.ldap.LdapServerTypeEnum">
            <column name="LDAP_SERVER_TYPE" not-null="true" unique="false" sql-type="INTEGER"/>
        </property>
        <property name="enabled" type="boolean">
            <column name="ENABLED" not-null="true" unique="false" sql-type="SMALLINT"/>
        </property>
        <bag name="userDnPatterns" table="SECURITY_LDAP_SERVER2DN" order-by="USER_DN_PATTERNS_FK" lazy="true" fetch="select" inverse="false">
            <key foreign-key="SECURITY_LDAP_USERDNPATTERN_LC">
                <column name="LDAP_SERVERS_FK" sql-type="BIGINT"/>
            </key>
            <many-to-many class="org.openuss.security.ldap.UserDnPatternImpl" foreign-key="SECURITY_LDAP_SERVER_USER_DN_C">
                <column name="USER_DN_PATTERNS_FK" sql-type="BIGINT"/>
            </many-to-many>
        </bag>
        <many-to-one name="authenticationDomain" class="org.openuss.security.ldap.AuthenticationDomainImpl" foreign-key="SECURITY_LDAP_SERVER_AUTHENTIC" lazy="proxy" fetch="select">
            <column name="AUTHENTICATION_DOMAIN_FK" not-null="true" sql-type="BIGINT"/>
        </many-to-one>
    </class>
</hibernate-mapping>