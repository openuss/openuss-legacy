<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping default-cascade="none">
    <class name="org.openuss.security.AuthorityImpl" table="SECURITY_AUTHORITY" dynamic-insert="false" dynamic-update="false">
        <cache usage="read-write" />
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="sequence">
                <param name="sequence">GLOBAL_SEQUENCE</param>
            </generator>
        </id>
        <property name="name" type="java.lang.String">
            <column name="NAME" not-null="true" unique="true" sql-type="VARCHAR(64)" index="authority_name"/>
        </property>
        <bag name="groups" table="SECURITY_GROUP2AUTHORITY" order-by="GROUPS_FK" lazy="extra" fetch="select" inverse="false" cascade="save-update">
            <key foreign-key="SECURITY_GROUP_MEMBERS_FKC">
                <column name="MEMBERS_FK" sql-type="BIGINT"/>
            </key>
            <many-to-many class="org.openuss.security.GroupImpl" foreign-key="SECURITY_AUTHORITY_GROUPS_FKC">
                <column name="GROUPS_FK" sql-type="BIGINT"/>
            </many-to-many>
        </bag>
        <joined-subclass name="org.openuss.security.UserImpl" table="SECURITY_USER" dynamic-insert="false" dynamic-update="false" abstract="false">
            <key foreign-key="SECURITY_USERIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="email" type="java.lang.String">
                <column name="EMAIL" not-null="true" unique="true" sql-type="VARCHAR(100)" index="user_email"/>
            </property>
            <property name="password" type="java.lang.String">
                <column name="PWD_HASH" not-null="true" unique="false" sql-type="VARCHAR(64)"/>
            </property>
            <property name="lastName" type="java.lang.String">
                <column name="LAST_NAME" not-null="true" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="firstName" type="java.lang.String">
                <column name="FIRST_NAME" not-null="true" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="title" type="java.lang.String">
                <column name="TITLE" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="imageId" type="java.lang.Long">
                <column name="IMAGE_ID" not-null="false" unique="false" sql-type="BIGINT"/>
            </property>
            <property name="locale" type="java.lang.String">
                <column name="LOCALE" not-null="true" unique="false" sql-type="VARCHAR(10)"/>
            </property>
            <property name="theme" type="java.lang.String">
                <column name="THEME" not-null="true" unique="false" sql-type="VARCHAR(64)"/>
            </property>
            <property name="timezone" type="java.lang.String">
                <column name="TIMEZONE" not-null="true" unique="false" sql-type="VARCHAR(20)"/>
            </property>
            <property name="address" type="java.lang.String">
                <column name="ADDRESS" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="ageGroup" type="java.lang.String">
                <column name="AGE_GROUP" not-null="false" unique="false" sql-type="VARCHAR(50)"/>
            </property>
            <property name="postcode" type="java.lang.String">
                <column name="POSTCODE" not-null="false" unique="false" sql-type="VARCHAR(50)"/>
            </property>
            <property name="telephone" type="java.lang.String">
                <column name="TELEPHONE" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="country" type="java.lang.String">
                <column name="COUNTRY" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="city" type="java.lang.String">
                <column name="CITY" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="profession" type="java.lang.String">
                <column name="PROFESSION" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="smsEmail" type="java.lang.String">
                <column name="SMS_EMAIL" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="lastLogin" type="java.util.Date">
                <column name="LAST_LOGIN" not-null="false" unique="false" sql-type="TIMESTAMP"/>
            </property>
            <property name="credentialsExpired" type="boolean">
                <column name="CREDENTIALS_EXPIRED" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="accountLocked" type="boolean">
                <column name="ACCOUNT_LOCKED" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="accountExpired" type="boolean">
                <column name="ACCOUNT_EXPIRED" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="enabled" type="boolean">
                <column name="ENABLED" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="studies" type="java.lang.String">
                <column name="STUDIES" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="matriculation" type="java.lang.String">
                <column name="MATRICULATION" not-null="false" unique="false" sql-type="VARCHAR(100)"/>
            </property>
            <property name="portrait" type="org.andromda.persistence.hibernate.usertypes.HibernateStringClobType">
                <column name="PORTRAIT" not-null="true" unique="false" sql-type="BLOB"/>
            </property>
            <property name="profilePublic" type="boolean">
                <column name="PROFILE_PUBLIC" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="imagePublic" type="boolean">
                <column name="IMAGE_PUBLIC" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="portraitPublic" type="boolean">
                <column name="PORTRAIT_PUBLIC" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="telephonePublic" type="boolean">
                <column name="TELEPHONE_PUBLIC" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="addressPublic" type="boolean">
                <column name="ADDRESS_PUBLIC" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="emailPublic" type="boolean">
                <column name="EMAIL_PUBLIC" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="discussionSubscriptionEnabled" type="boolean">
                <column name="SUBSCRIBE_DISCUSSION" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="newsletterSubscriptionEnabled" type="boolean">
                <column name="SUBSCRIBE_NEWSLETTER" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
            <property name="deleted" type="boolean">
                <column name="DELETED" not-null="true" unique="false" sql-type="SMALLINT"/>
            </property>
        </joined-subclass>
        <joined-subclass name="org.openuss.security.GroupImpl" table="SECURITY_GROUP" dynamic-insert="false" dynamic-update="false" abstract="false">
            <key foreign-key="SECURITY_GROUPIFKC">
                <column name="ID" sql-type="BIGINT"/>
            </key>
            <property name="label" type="java.lang.String">
                <column name="LABEL" not-null="false" unique="false" sql-type="VARCHAR(64)"/>
            </property>
            <property name="groupType" type="org.openuss.security.GroupTypeEnum">
                <column name="GROUP_TYPE" not-null="true" unique="false" sql-type="INTEGER"/>
            </property>
            <property name="password" type="java.lang.String">
                <column name="pwd" not-null="false" unique="false" sql-type="VARCHAR(64)"/>
            </property>
            <bag name="members" table="SECURITY_GROUP2AUTHORITY" order-by="MEMBERS_FK" lazy="extra" fetch="select" inverse="true" cascade="save-update">
                <key foreign-key="SECURITY_AUTHORITY_GROUPS_FKC">
                    <column name="GROUPS_FK" sql-type="BIGINT"/>
                </key>
                <many-to-many class="org.openuss.security.AuthorityImpl" foreign-key="SECURITY_GROUP_MEMBERS_FKC">
                    <column name="MEMBERS_FK" sql-type="BIGINT"/>
                </many-to-many>
            </bag>
        </joined-subclass>
    </class>
</hibernate-mapping>