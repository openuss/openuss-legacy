------- AndroMDA Exception Recording -------
Version ........: 3.2
Error ..........: Error performing ModelProcessor.process with model(s) --> 'file:D:\OpenUSS\workspace\openuss-plexus\plexus\plexus-model\src\main\uml\plexus.xml.zip!\plexus.xml'
Build ..........: ${build.date}
Build System ...: Windows XP-5.1
Build JDK ......: Sun Microsystems Inc.-1.5.0_06-b05
Build Builder ..: idueppe
Run System .....: Windows XP5.1
Run JDK ........: Sun Microsystems Inc.1.6.0_02-b05
Main Exception .: org.andromda.core.cartridge.CartridgeException: Error processing template 'templates/spring/SpringDao.vsl' with template context '{entity=org.andromda.cartridges.spring.metafacades.SpringEntityLogicImpl[Department], stringUtils=org.apache.commons.lang.StringUtils@1f5acd0, springUtils=org.andromda.cartridges.spring.SpringUtils@24bef5, escapeUtils=org.apache.commons.lang.StringEscapeUtils@74d22e, hibernateUtils=org.andromda.cartridges.spring.SpringHibernateUtils@192ee25, converter=org.andromda.utils.JavaTypeConverter@150cf54, driver=org.firebirdsql.jdbc.FBDriver, username=sysdba, password=masterkey, connectionUrl=jdbc:firebirdsql:localhost:openuss30, dataSource=java:comp/env/jdbc/openuss30, hibernatePoolSize=null, hibernateTransactionManagerStrategy=null, hibernateUserTransactionName=null, hibernateTransactionManagerLookup=null, hibernateUseOuterJoin=null, hibernateShowSql=false, hibernateJndiName=null, hibernateDialect=org.hibernate.dialect.FirebirdDialect, hibernateDefaultSchema=null, hibernateMaxFetchDepth=null, hibernateJdbcFetchSize=null, hibernateJdbcBatchSize=null, hibernateConnectionReleaseMode=null, hibernateEnableCache=true, hibernateJdbcUseScrollableResultSet=null, hibernateJdbcUseStreamsForBinary=null, hibernateHbm2DDLAuto=auto, hibernateQuerySubstitutions=null, hibernateCacheProvider=org.hibernate.cache.EhCacheProvider, hibernateQueryCacheFactory=org.hibernate.cache.StandardQueryCacheFactory, applicationContext=applicationContext.xml, applicationContextManageable=applicationContext-manageable.xml, applicationContextDataSource=applicationContext-dataSource.xml, applicationContextLocalDataSource=applicationContext-localDataSource.xml, applicationContextRemoteEjb=applicationContext-remoteEjb.xml, applicationContextLocalEjb=applicationContext-localEjb.xml, applicationContextServer=applicationContext-export-remoteServices.xml, applicationContextClient=applicationContext-import-remoteServices.xml, beanRefFactory=beanRefFactory.xml, beanRefFactoryId=beanRefFactory, beanRefFactoryEjbId=beanRefFactoryEjb, transactionManager=org.springframework.orm.hibernate3.HibernateTransactionManager, localTransactionManager=org.springframework.orm.hibernate3.HibernateTransactionManager, userTransactionName=null, transactionManagerName=null, sessionFactory=org.springframework.orm.hibernate3.LocalSessionFactoryBean, serviceLocatorName=ServiceLocator, serviceLocatorDefaultFactoryId=null, springTypesPackage=org.andromda.spring, springPresentationTypesPackage=org.andromda.spring.presentation, manageableServiceLocatorName=ManageableServiceLocator, clientServiceLocatorName=RemoteServiceLocator, clientServiceLocatorClassloaderSwitching=off, clientExceptionHandlingAdviceName=ClientExceptionHandlingAdvice, criteriaSearchBaseName=CriteriaSearch, principalStoreName=PrincipalStore, externalPrincipalStoreClass=null, externalPrincipalStoreGetter=get(), externalPrincipalStoreGetterType=java.security.Principal, openSessionInViewFilterName=AndroMDAOpenSessionInViewFilter, ejbViewType=local, ejbRemoteProxyFactoryBean=org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean, ejbLocalProxyFactoryBean=org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean, ejbSessionBeanBaseInterfaceLocal=javax.ejb.EJBLocalObject, ejbSessionBeanBaseInterfaceRemote=javax.ejb.EJBObject, ejbSessionBeanBaseClass=org.springframework.ejb.support.AbstractStatelessSessionBean, ejbRemoteUrlPackagePrefixes=org.jboss.naming:org.jnp.interfaces, ejbRemoteProviderUrl=localhost:1099, ejbRemoteInitialContextFactory=org.jnp.interfaces.NamingContextFactory, enableSpringTransactionsWhenEjbsEnabled=true, ejbTransactionsEnabled=true, serviceInterceptors=null, serviceRemotePort=8080, serviceRemoteContext=null, serviceRemoteServer=localhost, securityRealm=null, jndiDataSourceClass=org.springframework.jndi.JndiObjectFactoryBean, jdbcDataSourceClass=org.apache.commons.dbcp.BasicDataSource, jdbcDataSourceDestroyMethod=close, parameterRequiredCheck=false, xmlEncoding=UTF-8, session-ejbs=null, advice-impls=D:\OpenUSS\workspace\openuss-plexus\plexus\plexus-model/../plexus-core/src/main/java, service-impls=D:\OpenUSS\workspace\openuss-plexus\plexus\plexus-model/../plexus-core/src/main/java, dao-impls=D:\OpenUSS\workspace\openuss-plexus\plexus\plexus-model/../plexus-core/src/main/java, daos=D:\OpenUSS\workspace\openuss-plexus\plexus\plexus-model/../plexus-core/target/src, daoInheritanceEnabled=false, enableDaoPropertiesCreateMethod=true, acegiServiceSecurity=true, acegiServiceSecurityInterceptor=org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor, acegiServiceAccessDecisionManager=org.acegisecurity.vote.AffirmativeBased, acegiServiceDecisionVoter=org.acegisecurity.vote.RoleVoter, acegiRolePrefix=ROLE_, acegiAuthenticationManager=authenticationManager, acegiRunAsManager=null, acegiAuthenticationDaoBeanName=null, acegiAuthenticationManagerImplClass=null, acegiDaoAuthenticationProviderBeanName=daoAuthenticationProvider, acegiDaoAuthenticationProviderImplClass=null, acegiDaoUserCacheBeanName=null, acegiDaoUserCacheImplClass=null, acegiUserCacheConfigLocation=null, acegiUserCacheName=null, acegiPasswordEncoderBeanName=null, acegiPasswordEncoderImplClass=null, acegiPasswordSaltSourceBeanName=null, acegiAuthenticationDaoImplClass=null, richClient=false, configPropertyPrefix=, client=null, client-config=null, client-test=null, server=null, server-impl=null, server-config=null, server-test=null, server-test-config=null, criteria=D:\OpenUSS\workspace\openuss-plexus\plexus\plexus-model/../plexus-api/target/src, merge-mappings=null, applicationContextServerAuthentication=applicationContext-server-authentication.xml, applicationContextClientAuthentication=applicationContext-client-authentication.xml, serverTestContextAuthentication=applicationContext-test-authentication.xml, clientHttpInvokerExecutor=null, toDoTag=@todo, serverTestBeanRefFactory=applicationContext-test.xml, serverTestContextDataSource=applicationContext-test-dataSource.xml, enableTemplating=true, hibernateQueryUseNamedParameters=false, ejbsEnabled=false, daosEnabled=true, adviceEnabled=true, requiredCheckEnabled=false, ejbSecurityEnabled=false, remoteEjbsPresent=false, localEjbsPresent=true, useNamedParametersInQueries=false}' using cartridge 'spring'
Root Exception .: org.apache.velocity.exception.MethodInvocationException: Invocation of method 'getQuery' in  class org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl threw exception class org.andromda.core.translation.TranslatorException : org.andromda.core.translation.TranslatorException: Error translating with translation 'query.Hibernate-QL', contextElement 'org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl[findDepartmentByUniversityAndDefault]' and expression --> 'context org::openuss::lecture::Department::findDefaultDepartmentByUniversity(university : datatype::org::openuss::lecture::University, default:boolean):Departmentbody:
allInstances()->select(f|f.university=university and (f.defaultDepartment=default))'
MESSAGE --> 'line: 1 column: 167 --> expecting: 'pre', 'post', 'body''
org.apache.velocity.exception.MethodInvocationException: Invocation of method 'getQuery' in  class org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl threw exception class org.andromda.core.translation.TranslatorException : org.andromda.core.translation.TranslatorException: Error translating with translation 'query.Hibernate-QL', contextElement 'org.andromda.cartridges.spring.metafacades.SpringQueryOperationLogicImpl[findDepartmentByUniversityAndDefault]' and expression --> 'context org::openuss::lecture::Department::findDefaultDepartmentByUniversity(university : datatype::org::openuss::lecture::University, default:boolean):Departmentbody:
allInstances()->select(f|f.university=university and (f.defaultDepartment=default))'
MESSAGE --> 'line: 1 column: 167 --> expecting: 'pre', 'post', 'body''
	at org.apache.velocity.runtime.parser.node.ASTIdentifier.execute(ASTIdentifier.java:193)
	at org.apache.velocity.runtime.parser.node.ASTReference.execute(ASTReference.java:175)
	at org.apache.velocity.runtime.parser.node.ASTReference.evaluate(ASTReference.java:307)
	at org.apache.velocity.runtime.parser.node.ASTAndNode.evaluate(ASTAndNode.java:89)
	at org.apache.velocity.runtime.parser.node.ASTExpression.evaluate(ASTExpression.java:45)
	at org.apache.velocity.runtime.parser.node.ASTIfStatement.render(ASTIfStatement.java:68)
	at org.apache.velocity.runtime.parser.node.ASTBlock.render(ASTBlock.java:55)
	at org.apache.velocity.runtime.parser.node.ASTIfStatement.render(ASTIfStatement.java:70)
	at org.apache.velocity.runtime.parser.node.ASTBlock.render(ASTBlock.java:55)
	at org.apache.velocity.runtime.directive.Foreach.render(Foreach.java:166)
	at org.apache.velocity.runtime.parser.node.ASTDirective.render(ASTDirective.java:114)
	at org.apache.velocity.runtime.parser.node.SimpleNode.render(SimpleNode.java:230)
	at org.apache.velocity.Template.merge(Template.java:256)
	at org.andromda.templateengines.velocity.VelocityTemplateEngine.processTemplate(VelocityTemplateEngine.java:240)
	at org.andromda.core.cartridge.Cartridge.processWithTemplate(Cartridge.java:373)
	at org.andromda.core.cartridge.Cartridge.processTemplateWithMetafacades(Cartridge.java:235)
	at org.andromda.core.cartridge.Cartridge.processTemplate(Cartridge.java:111)
	at org.andromda.core.cartridge.Cartridge.processModelElements(Cartridge.java:62)
	at org.andromda.core.engine.ModelProcessor.processModels(ModelProcessor.java:249)
	at org.andromda.core.engine.ModelProcessor.process(ModelProcessor.java:146)
	at org.andromda.core.engine.ModelProcessor.process(ModelProcessor.java:82)
	at org.andromda.core.engine.Engine.run(Engine.java:82)
	at org.andromda.core.AndroMDA.run(AndroMDA.java:197)
	at org.andromda.maven.plugin.AndroMDAMojo.execute(AndroMDAMojo.java:92)
	at org.andromda.maven.plugin.AbstractAndroMDAMojo.execute(AbstractAndroMDAMojo.java:106)
	at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:443)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)
	at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:334)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:125)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:280)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
	at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
	at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
