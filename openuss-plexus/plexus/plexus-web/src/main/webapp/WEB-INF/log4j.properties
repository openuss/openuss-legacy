# This is the configuring for logging displayed in the Application Server
log4j.rootCategory=INFO, stdout

# Replace the line above if you want to put a log file into the directory
# you start Tomcat from
# log4j.rootCategory=INFO, stdout, R

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.file=${catalina.home}/logs/openuss-plexus.log
log4j.appender.R.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%p %c{1}. %m%n
log4j.appender.R.layout.ConversionPattern=%p %c{1}. %m%n

# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file

# Control logging for other open source packages
log4j.logger.com.opensymphony.oscache=ERROR
log4j.logger.org.acegisecurity=INFO
log4j.logger.org.apache.commons=INFO
log4j.logger.org.apache.myfaces=INFO
log4j.logger.com.sun.facelets=INFO
log4j.logger.org.apache.shale=INFO
log4j.logger.org.springframework=INFO
#log4j.logger.org.springframework.web.jsf.DelegatingVariableResolver=INFO

# All hibernate log output of "info" level or higher goes to stdout.
# For more verbose logging, change the "info" to "debug" on the last line.
log4j.logger.org.hibernate.ps.PreparedStatementCache=ERROR
log4j.logger.org.hibernate=ERROR

# Changing the log level to DEBUG will result in Hibernate generated
# SQL to be logged.
log4j.logger.org.hibernate.SQL=ERROR

# Changing the log level to DEBUG will result in the PreparedStatement
# bound variable values to be logged.
log4j.logger.org.hibernate.type=ERROR


log4j.logger.org.openuss=DEBUG
log4j.logger.org.openuss.framework.jsfcontrols=DEBUG
log4j.logger.org.openuss.framework.web.facelets=DEBUG



